{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to the SpaceONE developer guides. The documents list in the left navigation teach you how to build SpaceONE. The Achitecture design describes the software architecture of SpaceONE. The Core team developed new Python application framework for micro service architecture. The Console Framework introduces ATOMIC design pattern with Vue.js. The Plugins shows how SpaceONE can easily extend service coverage by developing various plugins. If you want to develop core system, jump into Core development . Start with building from scratch. The Console development section will guide you how to develop web console page. The Plugins development section describes how to develop new plugin. You can easily build and test your own plugin with a few steps. Design Your SpaceONE!","title":"Home"},{"location":"api/","text":"","title":"API References"},{"location":"introduction/","text":"SpaceONE is an open-source Cloud Management Platform that leverages existing multi cloud and on-premise IDCs. Single Sourch of Truth Intent-based Infrastructure Self-Service Open Platform Easy Expansion Enterprise-Level","title":"Introduction"},{"location":"architecture/console-framework/","text":"Console Framework # Console is developed with Vue.js and Node.js","title":"Console Framework"},{"location":"architecture/console-framework/#console-framework","text":"Console is developed with Vue.js and Node.js","title":"Console Framework"},{"location":"architecture/msa-framework/","text":"The Core team of SpaceONE has developed new Python application framework focusing on safe, speed, simplicity, and productivity. The application can be easily served as gRPC server, RESTful server, scheduler or worker.","title":"MSA Framework"},{"location":"architecture/plugins/","text":"Plugins Architecture #","title":"Plugins"},{"location":"architecture/plugins/#plugins-architecture","text":"","title":"Plugins Architecture"},{"location":"console/coding-style/","text":"","title":"Coding Style"},{"location":"console/getting-started/","text":"","title":"Getting Started"},{"location":"core/coding-style/","text":"","title":"Coding Style"},{"location":"core/getting-started/","text":"Development workflow 1. Fork in the cloud # Visit https://github.com/spaceone-dev There are lots of repositories. spaceone is top repository. Each micro service has own repository like identity , or inventory . Click 'Fork' button (top right) to establish a cloud-based fork. 2. Clone fork to local storage # Create your clone: git clone https://github.com/$user/spaceone.git cd spaceone 3. Branch # Add upstream: git remote add upstream https://github.com/spaceone-dev/spaceone.git # Never push to upstream master git remote set-url --push upstream no_push # Confirm that your remotes make sense: git remote -v Get your local master up to date: git fetch upstream git checkout master git rebase upstream/master Branch from it: git checkout -b myfeature 5. Commit # Commit your changes. git add changed files git commit -s Likely you go back and edit/build/test some more then 'commit --amend' in a few cycles. 6. Push # When ready to review (or just to establish an offsite backup of your work), push your branch to your fork on github.com : git push -f origin myfeature 7. Create a pull request # Visit your fork at https://github.com/$user/spaceone Click the Crete pull request button","title":"Getting Started"},{"location":"core/getting-started/#1-fork-in-the-cloud","text":"Visit https://github.com/spaceone-dev There are lots of repositories. spaceone is top repository. Each micro service has own repository like identity , or inventory . Click 'Fork' button (top right) to establish a cloud-based fork.","title":"1. Fork in the cloud"},{"location":"core/getting-started/#2-clone-fork-to-local-storage","text":"Create your clone: git clone https://github.com/$user/spaceone.git cd spaceone","title":"2. Clone fork to local storage"},{"location":"core/getting-started/#3-branch","text":"Add upstream: git remote add upstream https://github.com/spaceone-dev/spaceone.git # Never push to upstream master git remote set-url --push upstream no_push # Confirm that your remotes make sense: git remote -v Get your local master up to date: git fetch upstream git checkout master git rebase upstream/master Branch from it: git checkout -b myfeature","title":"3. Branch"},{"location":"core/getting-started/#5-commit","text":"Commit your changes. git add changed files git commit -s Likely you go back and edit/build/test some more then 'commit --amend' in a few cycles.","title":"5. Commit"},{"location":"core/getting-started/#6-push","text":"When ready to review (or just to establish an offsite backup of your work), push your branch to your fork on github.com : git push -f origin myfeature","title":"6. Push"},{"location":"core/getting-started/#7-create-a-pull-request","text":"Visit your fork at https://github.com/$user/spaceone Click the Crete pull request button","title":"7. Create a pull request"},{"location":"plugins/coding-style/","text":"","title":"Coding style"},{"location":"plugins/getting-started/","text":"","title":"Getting Started"}]}